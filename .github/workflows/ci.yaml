name: Setup Poetry and Install Dependencies

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

env:
  PYTHONDONTWRITEBYTECODE: 1
  PYTHONUNBUFFERED: 1
  POETRY_HOME: /opt/poetry
  POETRY_VERSION: 1.8.2

jobs:
  Unit-Tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'  # or your required version

      - name: Install Poetry
        run: python3 -m venv $POETRY_HOME &&
             $POETRY_HOME/bin/pip install poetry==$POETRY_VERSION
      - name: Check if poetry is installed
        run: $POETRY_HOME/bin/poetry --version
      - name: Install dependencies in a new virtual environment
        run: export PATH="/opt/venv/bin:$PATH" &&
             python3 -m venv /opt/venv &&
             . /opt/venv/bin/activate &&
             $POETRY_HOME/bin/poetry install --no-root
      - name: Run Tests
        run: export PATH="/opt/venv/bin:$PATH" &&
             pytest -v

  Build-and-Push-Docker-Image:
    runs-on: ubuntu-latest
    needs: Unit-Tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/hello-python:latest
          cache-from: type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/hello-python:cache
          cache-to: type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/hello-python:cache,mode=max